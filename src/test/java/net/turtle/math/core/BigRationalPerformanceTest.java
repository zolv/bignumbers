package net.turtle.math.core;

import org.junit.Test;

public class BigRationalPerformanceTest {

  //	@Test
  //	public void initialize() throws Exception {
  //		final BigRational prime1000 = new BigRational(
  //
  //	
  //
  //		BigRational number = prime1000;// new BigRational("3/7");
  //		long digits = 1000;
  //		for ( int i = 0 ; i < 1000 ; i++ ) {
  //			number = number.multiply( number );
  //			digits = digits * 2;
  //			System.gc();
  //			System.out.println( i );
  //			// System.out.println(number.getNumerator().toString().length());
  //			System.gc();
  //			System.out.println( digits );
  //		}
  //
  //	}

  @Test
  public void powerOf2() throws Exception {
    final BigRational two = new BigRational("2");
    final BigRational prime = two.pow(new BigRational("74207281")).subtract(new BigRational("1"));
    System.out.println(prime);
  }
}
